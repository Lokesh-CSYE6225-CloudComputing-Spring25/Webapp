name: Web App CI

on:
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Debug MySQL Service
        run: |
          docker ps -a
          docker logs $(docker ps -q --filter ancestor=mysql:8.0)

      - name: Wait for MySQL to be ready
        run: |
          echo "Checking MySQL container logs..."
          docker ps
          docker logs $(docker ps -q --filter ancestor=mysql:8.0) || echo "No logs found"

          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -u"${{ secrets.MYSQL_USER }}" --password="${{ secrets.MYSQL_PASSWORD }}" --silent && echo "Database is ready!" && exit 0
            echo "Still waiting..."
            sleep 5
          done
          echo "MySQL failed to start!"
          exit 1

      - name: Fix MySQL Authentication Method
        run: |
          echo "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '${{ secrets.MYSQL_ROOT_PASSWORD }}'; FLUSH PRIVILEGES;" | mysql -h 127.0.0.1 -u root --password="${{ secrets.MYSQL_ROOT_PASSWORD }}"
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

      - name: Run database migrations
        run: |
          source venv/bin/activate
          python manage.py db upgrade || echo "No migrations needed"

      - name: Run tests with verbose output
        run: |
          source venv/bin/activate
          pytest -vv --capture=no tests/test_api.py
