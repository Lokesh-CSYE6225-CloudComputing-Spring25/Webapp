name: Web App CI

on:
  pull_request:
    branches:
      - main  # Runs on PRs to main branch

jobs:
  run-tests:
    name: Run Python Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASS }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASS }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASS }}" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          sleep 30  # Adjust wait time if needed

      - name: Fix MySQL Authentication Method
        run: |
          sudo systemctl start mysql || echo "MySQL service not needed in containerized environment"
          echo "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '${DB_PASS}'; FLUSH PRIVILEGES;" | mysql -u root -p"${DB_PASS}"
        env:
          DB_PASS: ${{ secrets.DB_PASS }}

      - name: Configure MySQL Database and User
        run: |
          echo "Creating database and user..."
          mysql -u root -p"${DB_PASS}" -e "CREATE DATABASE IF NOT EXISTS ${DB_NAME};"
          mysql -u root -p"${DB_PASS}" -e "CREATE USER IF NOT EXISTS '${DB_USER}'@'%' IDENTIFIED BY '${DB_PASS}';"
          mysql -u root -p"${DB_PASS}" -e "GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'%';"
          mysql -u root -p"${DB_PASS}" -e "FLUSH PRIVILEGES;"
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}

      - name: Run Tests
        run: |
          source venv/bin/activate
          pytest tests/
